buildscript {
    ext {
        springBootVersion = '1.5.21.RELEASE'
        appVersion = "0.0.11-SNAPSHOT-3"
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE')
        classpath 'com.sourcemuse.gradle.plugin:gradle-mongo-plugin:0.9.0'
        classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
        classpath "net.saliman:gradle-cobertura-plugin:2.4.0"
    }
}

allprojects {
    apply plugin: 'idea'
    group 'io.github.thisisnozaku.charactercreator'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'mongo'
apply plugin: 'idea'
apply plugin: "io.spring.dependency-management"
apply plugin: 'war'
apply plugin: "jacoco"


dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.10.47'
    }
}

jar {
    baseName = 'neone-core'
    version = "${appVersion}"
}
war {
    baseName = 'neone-core'
    version = "${appVersion}"
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url "https://repository.jboss.org"
    }
    maven {
        url "http://repo.spring.io/libs-release-remote/"
    }
    mavenCentral()
    mavenLocal()
}

configurations {
    osgi

    testOsgi
    testOsgi.extendsFrom osgi
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-aop:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-mail:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}"
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.4.4.RELEASE")
    testCompile 'org.springframework.security:spring-security-test'
    compile('com.google.guava:guava:19.0')

    compile("org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}")

    compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    compile('org.thymeleaf:thymeleaf-spring4:2.1.2.RELEASE')
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE'
    runtime 'net.sourceforge.nekohtml:nekohtml:1.9.22'

    runtime('org.apache.derby:derby:10.12.1.1')

    compile('javax.inject:javax.inject:1')

    compile('io.github.thisisnozaku.charactercreator:neone-plugin-api:1.1.0')

    compile 'org.apache.felix:org.apache.felix.framework:5.4.0'
    osgi 'org.apache.felix:org.apache.felix.scr:2.0.2'
    osgi('io.github.thisisnozaku.charactercreator:neone-plugin-api:1.0')
    osgi 'org.apache.felix:org.apache.felix.framework.security:2.6.0'
    testOsgi project(':test-plugin')

    compile 'commons-io:commons-io:2.4'
    compile 'org.apache.commons:commons-collections4:4.4'
    compile('io.github.thisisnozaku:pdf-export:1.1.0')

    compile 'com.amazonaws:aws-java-sdk-core:1.11.86'
    compile 'com.amazonaws:aws-java-sdk-s3:1.11.86'
    compile 'com.amazonaws:aws-java-sdk-ses:1.11.86'
    compile 'com.amazonaws:aws-java-sdk-sqs:1.11.86'

    compile 'org.springframework.security.oauth:spring-security-oauth2:2.0.11.RELEASE'

    implementation'com.google.api-client:google-api-client:1.30.4'
    implementation 'com.google.apis:google-api-services-people:v1-rev20190910-1.30.1'

    compile "com.jayway.jsonpath:json-path:2.2.0"

    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.6.3'

    // https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.6'
    // https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.6'

    runtime 'mysql:mysql-connector-java'
    runtime 'org.mariadb.jdbc:mariadb-java-client:2.4.3'
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task copyTestRuntimeDependencies(type: Copy) {
    from(configurations.testOsgi)
    into 'plugins'
}

task copyRuntimeDependencies(type: Copy) {
    from(configurations.osgi)
    into 'plugins'
}

copyRuntimeDependencies.outputs.upToDateWhen {
    false
}

task cleanCache {
    new File(System.getProperty("java.io.tmpdir")).deleteDir()
}

clean << {
    new File('plugins').listFiles().each { f ->
        delete f
    }
}
clean.dependsOn cleanCache

//noinspection GroovyAssignabilityCheck
test.dependsOn copyTestRuntimeDependencies
bootRun.dependsOn copyRuntimeDependencies

bootRun {
    if (project.hasProperty('jvmArgs')) {
        jvmArgs project.jvmArgs.split("\\s+")
        println project.jvmArgs
    }
    systemProperties System.properties
}

jacocoTestReport.dependsOn test