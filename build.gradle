import java.nio.file.Paths

buildscript {
    ext {
        springBootVersion = '1.2.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}

allprojects {
    apply plugin: 'idea'
    group 'io.github.thisisnozaku.charactercreator'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'neone-core'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven {
        url "https://repository.jboss.org"
    }
    maven {
        url "http://repo.spring.io/libs-release-remote/"
    }
    mavenCentral()
    mavenLocal()
}

configurations {
    osgi

    testOsgi
    testOsgi.extendsFrom osgi
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-social-facebook')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.data:spring-data-mongodb:1.8.1.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf:1.3.0.RELEASE')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.thymeleaf:thymeleaf-spring4:2.1.2.RELEASE')
    runtime('org.apache.derby:derby:10.12.1.1')
    compile 'org.apache.felix:org.apache.felix.framework:5.4.0'
    osgi 'org.apache.felix:org.apache.felix.scr:2.0.2'
    runtime 'net.sourceforge.nekohtml:nekohtml:1.9.22'
    testOsgi project(':test-plugin')
    compile project(':neone-plugin-api')
    compile 'commons-io:commons-io:2.4'
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task copyRuntimeDependencies(type: Sync) {
    from(configurations.testOsgi)
    into 'plugins'
}

copyRuntimeDependencies.outputs.upToDateWhen { false }

clean << {
    new File('plugins').listFiles().each { f ->
        delete f
    }
    new File('felix-cache').deleteDir()
}

test.dependsOn copyRuntimeDependencies